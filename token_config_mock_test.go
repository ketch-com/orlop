// Code generated by MockGen. DO NOT EDIT.
// Source: token_config.go

// Package orlop_test is a generated GoMock package.
package orlop_test

import (
	gomock "github.com/golang/mock/gomock"
	orlop "github.com/switch-bit/orlop"
	reflect "reflect"
	time "time"
)

// MockHasTokenConfig is a mock of HasTokenConfig interface
type MockHasTokenConfig struct {
	ctrl     *gomock.Controller
	recorder *MockHasTokenConfigMockRecorder
}

// MockHasTokenConfigMockRecorder is the mock recorder for MockHasTokenConfig
type MockHasTokenConfigMockRecorder struct {
	mock *MockHasTokenConfig
}

// NewMockHasTokenConfig creates a new mock instance
func NewMockHasTokenConfig(ctrl *gomock.Controller) *MockHasTokenConfig {
	mock := &MockHasTokenConfig{ctrl: ctrl}
	mock.recorder = &MockHasTokenConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHasTokenConfig) EXPECT() *MockHasTokenConfigMockRecorder {
	return m.recorder
}

// GetIssuer mocks base method
func (m *MockHasTokenConfig) GetIssuer() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIssuer")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetIssuer indicates an expected call of GetIssuer
func (mr *MockHasTokenConfigMockRecorder) GetIssuer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIssuer", reflect.TypeOf((*MockHasTokenConfig)(nil).GetIssuer))
}

// GetKeyMap mocks base method
func (m *MockHasTokenConfig) GetKeyMap() orlop.HasKeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyMap")
	ret0, _ := ret[0].(orlop.HasKeyConfig)
	return ret0
}

// GetKeyMap indicates an expected call of GetKeyMap
func (mr *MockHasTokenConfigMockRecorder) GetKeyMap() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyMap", reflect.TypeOf((*MockHasTokenConfig)(nil).GetKeyMap))
}

// GetPrivateKey mocks base method
func (m *MockHasTokenConfig) GetPrivateKey() orlop.HasKeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrivateKey")
	ret0, _ := ret[0].(orlop.HasKeyConfig)
	return ret0
}

// GetPrivateKey indicates an expected call of GetPrivateKey
func (mr *MockHasTokenConfigMockRecorder) GetPrivateKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrivateKey", reflect.TypeOf((*MockHasTokenConfig)(nil).GetPrivateKey))
}

// GetPublicKey mocks base method
func (m *MockHasTokenConfig) GetPublicKey() orlop.HasKeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicKey")
	ret0, _ := ret[0].(orlop.HasKeyConfig)
	return ret0
}

// GetPublicKey indicates an expected call of GetPublicKey
func (mr *MockHasTokenConfigMockRecorder) GetPublicKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicKey", reflect.TypeOf((*MockHasTokenConfig)(nil).GetPublicKey))
}

// GetShared mocks base method
func (m *MockHasTokenConfig) GetShared() orlop.HasKeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShared")
	ret0, _ := ret[0].(orlop.HasKeyConfig)
	return ret0
}

// GetShared indicates an expected call of GetShared
func (mr *MockHasTokenConfigMockRecorder) GetShared() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShared", reflect.TypeOf((*MockHasTokenConfig)(nil).GetShared))
}

// GetTTL mocks base method
func (m *MockHasTokenConfig) GetTTL() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTTL")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetTTL indicates an expected call of GetTTL
func (mr *MockHasTokenConfigMockRecorder) GetTTL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTTL", reflect.TypeOf((*MockHasTokenConfig)(nil).GetTTL))
}
