// Code generated by MockGen. DO NOT EDIT.
// Source: credentials.go

// Package orlop_test is a generated GoMock package.
package orlop_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHasCredentialsConfig is a mock of HasCredentialsConfig interface
type MockHasCredentialsConfig struct {
	ctrl     *gomock.Controller
	recorder *MockHasCredentialsConfigMockRecorder
}

// MockHasCredentialsConfigMockRecorder is the mock recorder for MockHasCredentialsConfig
type MockHasCredentialsConfigMockRecorder struct {
	mock *MockHasCredentialsConfig
}

// NewMockHasCredentialsConfig creates a new mock instance
func NewMockHasCredentialsConfig(ctrl *gomock.Controller) *MockHasCredentialsConfig {
	mock := &MockHasCredentialsConfig{ctrl: ctrl}
	mock.recorder = &MockHasCredentialsConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHasCredentialsConfig) EXPECT() *MockHasCredentialsConfigMockRecorder {
	return m.recorder
}

// GetID mocks base method
func (m *MockHasCredentialsConfig) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID
func (mr *MockHasCredentialsConfigMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockHasCredentialsConfig)(nil).GetID))
}

// GetUsername mocks base method
func (m *MockHasCredentialsConfig) GetUsername() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsername")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUsername indicates an expected call of GetUsername
func (mr *MockHasCredentialsConfigMockRecorder) GetUsername() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsername", reflect.TypeOf((*MockHasCredentialsConfig)(nil).GetUsername))
}

// GetPassword mocks base method
func (m *MockHasCredentialsConfig) GetPassword() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPassword")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPassword indicates an expected call of GetPassword
func (mr *MockHasCredentialsConfigMockRecorder) GetPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPassword", reflect.TypeOf((*MockHasCredentialsConfig)(nil).GetPassword))
}
