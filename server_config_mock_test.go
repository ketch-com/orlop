// Code generated by MockGen. DO NOT EDIT.
// Source: server_config.go

// Package orlop_test is a generated GoMock package.
package orlop_test

import (
	gomock "github.com/golang/mock/gomock"
	orlop "github.com/switch-bit/orlop"
	reflect "reflect"
)

// MockHasServerConfig is a mock of HasServerConfig interface
type MockHasServerConfig struct {
	ctrl     *gomock.Controller
	recorder *MockHasServerConfigMockRecorder
}

// MockHasServerConfigMockRecorder is the mock recorder for MockHasServerConfig
type MockHasServerConfigMockRecorder struct {
	mock *MockHasServerConfig
}

// NewMockHasServerConfig creates a new mock instance
func NewMockHasServerConfig(ctrl *gomock.Controller) *MockHasServerConfig {
	mock := &MockHasServerConfig{ctrl: ctrl}
	mock.recorder = &MockHasServerConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHasServerConfig) EXPECT() *MockHasServerConfigMockRecorder {
	return m.recorder
}

// GetBind mocks base method
func (m *MockHasServerConfig) GetBind() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBind")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBind indicates an expected call of GetBind
func (mr *MockHasServerConfigMockRecorder) GetBind() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBind", reflect.TypeOf((*MockHasServerConfig)(nil).GetBind))
}

// GetListen mocks base method
func (m *MockHasServerConfig) GetListen() uint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListen")
	ret0, _ := ret[0].(uint)
	return ret0
}

// GetListen indicates an expected call of GetListen
func (mr *MockHasServerConfigMockRecorder) GetListen() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListen", reflect.TypeOf((*MockHasServerConfig)(nil).GetListen))
}

// GetTLS mocks base method
func (m *MockHasServerConfig) GetTLS() orlop.HasTLSConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTLS")
	ret0, _ := ret[0].(orlop.HasTLSConfig)
	return ret0
}

// GetTLS indicates an expected call of GetTLS
func (mr *MockHasServerConfigMockRecorder) GetTLS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTLS", reflect.TypeOf((*MockHasServerConfig)(nil).GetTLS))
}

// GetLoopback mocks base method
func (m *MockHasServerConfig) GetLoopback() orlop.HasClientConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoopback")
	ret0, _ := ret[0].(orlop.HasClientConfig)
	return ret0
}

// GetLoopback indicates an expected call of GetLoopback
func (mr *MockHasServerConfigMockRecorder) GetLoopback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoopback", reflect.TypeOf((*MockHasServerConfig)(nil).GetLoopback))
}
