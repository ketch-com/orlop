// Code generated by MockGen. DO NOT EDIT.
// Source: key_config.go

// Package orlop_test is a generated GoMock package.
package orlop_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHasKeyConfig is a mock of HasKeyConfig interface
type MockHasKeyConfig struct {
	ctrl     *gomock.Controller
	recorder *MockHasKeyConfigMockRecorder
}

// MockHasKeyConfigMockRecorder is the mock recorder for MockHasKeyConfig
type MockHasKeyConfigMockRecorder struct {
	mock *MockHasKeyConfig
}

// NewMockHasKeyConfig creates a new mock instance
func NewMockHasKeyConfig(ctrl *gomock.Controller) *MockHasKeyConfig {
	mock := &MockHasKeyConfig{ctrl: ctrl}
	mock.recorder = &MockHasKeyConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHasKeyConfig) EXPECT() *MockHasKeyConfigMockRecorder {
	return m.recorder
}

// GetID mocks base method
func (m *MockHasKeyConfig) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID
func (mr *MockHasKeyConfigMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockHasKeyConfig)(nil).GetID))
}

// GetSecret mocks base method
func (m *MockHasKeyConfig) GetSecret() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// GetSecret indicates an expected call of GetSecret
func (mr *MockHasKeyConfigMockRecorder) GetSecret() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockHasKeyConfig)(nil).GetSecret))
}

// GetFile mocks base method
func (m *MockHasKeyConfig) GetFile() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFile indicates an expected call of GetFile
func (mr *MockHasKeyConfigMockRecorder) GetFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockHasKeyConfig)(nil).GetFile))
}
