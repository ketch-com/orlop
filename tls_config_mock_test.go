// Code generated by MockGen. DO NOT EDIT.
// Source: tls_config.go

// Package orlop_test is a generated GoMock package.
package orlop_test

import (
	tls "crypto/tls"
	gomock "github.com/golang/mock/gomock"
	orlop "github.com/switch-bit/orlop"
	reflect "reflect"
)

// MockHasTLSConfig is a mock of HasTLSConfig interface
type MockHasTLSConfig struct {
	ctrl     *gomock.Controller
	recorder *MockHasTLSConfigMockRecorder
}

// MockHasTLSConfigMockRecorder is the mock recorder for MockHasTLSConfig
type MockHasTLSConfigMockRecorder struct {
	mock *MockHasTLSConfig
}

// NewMockHasTLSConfig creates a new mock instance
func NewMockHasTLSConfig(ctrl *gomock.Controller) *MockHasTLSConfig {
	mock := &MockHasTLSConfig{ctrl: ctrl}
	mock.recorder = &MockHasTLSConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHasTLSConfig) EXPECT() *MockHasTLSConfigMockRecorder {
	return m.recorder
}

// GetCert mocks base method
func (m *MockHasTLSConfig) GetCert() orlop.KeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCert")
	ret0, _ := ret[0].(orlop.KeyConfig)
	return ret0
}

// GetCert indicates an expected call of GetCert
func (mr *MockHasTLSConfigMockRecorder) GetCert() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCert", reflect.TypeOf((*MockHasTLSConfig)(nil).GetCert))
}

// GetClientAuth mocks base method
func (m *MockHasTLSConfig) GetClientAuth() tls.ClientAuthType {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClientAuth")
	ret0, _ := ret[0].(tls.ClientAuthType)
	return ret0
}

// GetClientAuth indicates an expected call of GetClientAuth
func (mr *MockHasTLSConfigMockRecorder) GetClientAuth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientAuth", reflect.TypeOf((*MockHasTLSConfig)(nil).GetClientAuth))
}

// GetEnabled mocks base method
func (m *MockHasTLSConfig) GetEnabled() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnabled")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetEnabled indicates an expected call of GetEnabled
func (mr *MockHasTLSConfigMockRecorder) GetEnabled() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnabled", reflect.TypeOf((*MockHasTLSConfig)(nil).GetEnabled))
}

// GetInsecure mocks base method
func (m *MockHasTLSConfig) GetInsecure() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInsecure")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetInsecure indicates an expected call of GetInsecure
func (mr *MockHasTLSConfigMockRecorder) GetInsecure() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInsecure", reflect.TypeOf((*MockHasTLSConfig)(nil).GetInsecure))
}

// GetKey mocks base method
func (m *MockHasTLSConfig) GetKey() orlop.KeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey")
	ret0, _ := ret[0].(orlop.KeyConfig)
	return ret0
}

// GetKey indicates an expected call of GetKey
func (mr *MockHasTLSConfigMockRecorder) GetKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockHasTLSConfig)(nil).GetKey))
}

// GetOverride mocks base method
func (m *MockHasTLSConfig) GetOverride() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOverride")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOverride indicates an expected call of GetOverride
func (mr *MockHasTLSConfigMockRecorder) GetOverride() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOverride", reflect.TypeOf((*MockHasTLSConfig)(nil).GetOverride))
}

// GetRootCA mocks base method
func (m *MockHasTLSConfig) GetRootCA() orlop.KeyConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRootCA")
	ret0, _ := ret[0].(orlop.KeyConfig)
	return ret0
}

// GetRootCA indicates an expected call of GetRootCA
func (mr *MockHasTLSConfigMockRecorder) GetRootCA() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRootCA", reflect.TypeOf((*MockHasTLSConfig)(nil).GetRootCA))
}

// GetGenerate mocks base method
func (m *MockHasTLSConfig) GetGenerate() orlop.CertGenerationConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenerate")
	ret0, _ := ret[0].(orlop.CertGenerationConfig)
	return ret0
}

// GetGenerate indicates an expected call of GetGenerate
func (mr *MockHasTLSConfigMockRecorder) GetGenerate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenerate", reflect.TypeOf((*MockHasTLSConfig)(nil).GetGenerate))
}
